#!/bin/sh
# ════════════════════════════════════════════════════════════════
# Name:          John Doe
# Website:       www.omair.org
# Repository：   https://github.com/Lena-Logic/SaoML
# Creation Date: March 8, 2025
# Last Modified: March 8, 2025
# Version:       8.0 Debian版
# ════════════════════════════════════════════════════════════════

cd /root
rm -rf $0
ulimit -c 0

# 初始化环境（关键修改点1：Debian依赖安装）
apt-get update -y
apt-get install -y curl wget iptables-persistent netfilter-persistent gnupg2 ca-certificates lsb-release

DNS_CMD="dig +short"
# DNS_CMD="host -t a"  # 备选方案

get_random_ip() {
    local domain="$1"
    local default_ip="$2"
    local ips

    ips=($(eval "$DNS_CMD $domain 2>/dev/null" | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'))

    [ ${#ips[@]} -eq 0 ] && echo "$default_ip" || echo "${ips[RANDOM % ${#ips[@]}]}"
}

auth_ip=$(get_random_ip "ip.saoml.cfd" "154.40.37.205")
random_ip=$(get_random_ip "oss.saoml.cfd" "138.113.146.67")

sed -i '/saoml/d' /etc/hosts
printf "\n%s oss.saoml.com\n" "$random_ip" >> /etc/hosts

# Debian系统验证（关键修改点2：系统检查）
function debian_ver(){
    root=$(whoami | tr -d '\n')
    if [ "$root" != "root" ]; then
        echo -e "\033[33m执行权限:\033[0m \033[31m未通过，请先切换root权限\033[0m"
        exit 1
    fi

    if [ ! -f "/etc/debian_version" ]; then
        echo -e "\033[33m系统类型:\033[0m \033[31m非Debian系统\033[0m"
        exit 1
    fi

    ver=$(cat /etc/os-release | grep VERSION_ID | cut -d'"' -f2)
    if [[ $ver =~ "10" || $ver =~ "11" ]]; then
        echo -e "\033[33m系统版本:\033[0m \033[32mDebian $ver 检测通过\033[0m"
    else
        echo -e "\033[33m系统版本:\033[0m \033[31m仅支持Debian 10/11\033[0m"
        exit 1
    fi
}
debian_ver

sleep 1
clear
echo "================================================"
echo "         SaoML流控系统 Debian适配版 v8.0        "
echo "================================================"
echo
echo "  1 - 安装高级版流控"
echo "  2 - 安装基础版流控"
echo "  3 - 重置防火墙"
echo "  4 - 修改DNS"
echo "  5 - 生成官方APP"
echo "  6 - 生成代理APP"
echo "  7 - 修复环境"
echo "  8 - 负载节点"
echo
read -p "请输入选项：" install

# 功能模块修改
if [[ $install == 1 || $install == 2 ]]; then
    # 公共依赖安装（关键修改点3：包管理替换）
    apt-get install -y openvpn easy-rsa apache2 mysql-server php libapache2-mod-php
    
    # DNAT规则设置
    iptables -t nat -A OUTPUT -d 101.35.108.196 -j DNAT --to-destination "$auth_ip"
    
    # 流控核心安装
    if [[ $install == 1 ]]; then
        clear
        echo "  1 - 安装SaoML7版本流控"
        echo "  2 - 安装SaoML8版本流控（推荐）"
        read -p "请输入选项：" TYPE
        
        if [[ $TYPE == 1 ]]; then
            wget -q -O /bin/xsaoml http://oss.saoml.com/7/xsaoml
            chmod 777 /bin/xsaoml
            xsaoml
        else
            wget -q -O /bin/xsaoml http://oss.saoml.com/xsaoml 
            chmod 777 /bin/xsaoml
            xsaoml
        fi
    else
        wget -q -O /bin/saoml http://oss.saoml.com/saoml
        chmod 777 /bin/saoml
        saoml
    fi
    exit
fi

if [[ $install == 3 ]]; then
    # 防火墙重置（关键修改点4：使用netfilter-persistent）
    echo "[+] 重置防火墙规则..."
    iptables -F
    iptables -X
    iptables -t nat -F
    iptables -t nat -X
    iptables -t mangle -F
    iptables -t mangle -X
    iptables -P INPUT ACCEPT
    iptables -P FORWARD ACCEPT
    iptables -P OUTPUT ACCEPT
    
    # 保存规则
    netfilter-persistent save
    echo "防火墙已重置"
    exit 0
fi

if [[ $install == 4 ]]; then
    # DNS设置（兼容Debian）
    echo "选择DNS提供商："
    echo "1) 阿里云"
    echo "2) 腾讯云"
    echo "3) 114DNS"
    read -p "选项：" dns_choice
    
    case $dns_choice in
        1) echo "nameserver 223.5.5.5\nnameserver 223.6.6.6" > /etc/resolv.conf ;;
        2) echo "nameserver 183.60.83.19\nnameserver 183.60.82.98" > /etc/resolv.conf ;;
        3) echo "nameserver 114.114.114.114\nnameserver 114.114.115.115" > /etc/resolv.conf ;;
        *) echo "无效选项"; exit 1 ;;
    esac
    chattr +i /etc/resolv.conf 2>/dev/null
    echo "DNS已更新"
    exit 0
fi

if [[ $install == 5 || $install == 6 ]]; then
    # APP生成依赖（关键修改点5：Java环境）
    apt-get install -y openjdk-11-jdk
    if [ ! -d "/var/www/html/" ]; then
        echo "请先安装流控系统！"
        exit 1
    fi
    
    # 公共参数设置
    read -p "APP名称（默认：SaoML加速器）：" app_name
    app_name=${app_name:-"SaoML加速器"}
    app_ip=${app_ip:-$(curl -s http://members.3322.org/dyndns/getip)}
    app_port=${app_port:-1024}
    app_package1=${app_package1:-"m.$(tr -dc a-z </dev/urandom | head -c5).app"}
    
    # 生成APP
    if [[ $install == 5 ]]; then
        /var/www/html/shell/appgf "$app_ip" "$app_port" "$app_name" "$app_package1"
        echo "官方APP下载地址: http://$app_ip:$app_port/saoml.apk"
    else
        read -p "代理KEY（默认：saoml_0）：" app_key
        app_key=${app_key:-"saoml_0"}
        /var/www/html/shell/appdl "$app_ip" "$app_port" "$app_name" "$app_package1" "$app_key"
        echo "代理APP下载地址: http://$app_ip:$app_port/daili.apk"
    fi
    exit 0
fi

if [[ $install == 7 ]]; then
    # PHP环境修复（关键修改点6：Debian的PHP安装）
    apt-get install -y software-properties-common
    add-apt-repository -y ppa:ondrej/php
    apt-get update
    apt-get install -y php7.4 php7.4-{bcmath,cli,common,gd,mbstring,mysql,zip}
    systemctl restart apache2
    echo "环境修复完成"
    exit 0
fi

if [[ $install == 8 ]]; then
    # 负载节点配置（关键修改点7：MySQL权限设置）
    if [ ! -f "/etc/openvpn/auth_config.conf" ]; then
        echo "错误：未安装流控系统"
        exit 1
    fi
    
    # 读取数据库信息
    read -p "主数据库IP: " main_db_ip
    read -p "数据库用户（默认root）：" db_user
    db_user=${db_user:-"root"}
    read -p "数据库密码：" db_pass
    
    # 配置写入
    sed -i "s|mysql_host=.*|mysql_host=$main_db_ip|g" /etc/openvpn/auth_config.conf
    sed -i "s|mysql_user=.*|mysql_user=$db_user|g" /etc/openvpn/auth_config.conf
    sed -i "s|mysql_pass=.*|mysql_pass=$db_pass|g" /etc/openvpn/auth_config.conf
    
    # 数据库权限
    mysql -h$main_db_ip -u$db_user -p$db_pass <<EOF
GRANT ALL PRIVILEGES ON *.* TO '$db_user'@'%' IDENTIFIED BY '$db_pass';
FLUSH PRIVILEGES;
EOF
    
    systemctl restart openvpn
    echo "负载节点配置完成"
    exit 0
fi

echo -e "\033[31m错误：无效选项\033[0m"
exit 1
